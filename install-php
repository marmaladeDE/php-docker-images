#!/bin/bash -e

. /etc/os-release

case "$ID" in
    debian)
        case "$VERSION" in
            "11 (bullseye)")
                DEBIAN_LIBICU=libicu67
                DEBIAN_LIBTIDY=libtidy5deb1
                DEBIAN_LIBSODIUM=libsodium23
            ;;
            "10 (buster)")
                DEBIAN_LIBICU=libicu63
                DEBIAN_LIBTIDY=libtidy5deb1
                DEBIAN_LIBSODIUM=libsodium23
            ;;
            "9 (stretch)")
                DEBIAN_LIBICU=libicu57
                DEBIAN_LIBTIDY=libtidy5
                DEBIAN_LIBSODIUM=libsodium18
            ;;
            *)
                echo "debian version must be strech or buster (got $VERSION)"
                exit -1
            ;;
        esac
        PACKAGE_FORMAT=apt
        APT_EXTRA=
        APT_DEV_EXTRA=
        ;;
    alpine)
        case "$PRETTY_NAME" in
            "Alpine Linux v3.11")
            ;;
            "Alpine Linux v3.10")
                APK_EXTRA_DIST="libgcrypt libgpg-error"
                APK_DEV_EXTRA_DIST="libgcrypt-dev libgpg-error-dev"
            ;;
            "Alpine Linux v3.9")
            ;;
            *)
                echo "alpine version must be 3.9, 3.10 or 3.11 (got $PRETTY_NAME)"
                exit -1
            ;;
        esac
        PACKAGE_FORMAT=apk
        APK_EXTRA=
        APK_DEV_EXTRA=
        ;;
    *)
        echo "linux distribution not supported (got $ID)"
        exit -1
    ;;
esac

echo "PHP VERSION: $PHP_VERSION"

APCU_DISABLE=
XDEBUG_VERSION=xdebug
MEMCACHED_VERSION=memcached
EXT_EXTRA=
APT_EXTRA=
APT_DEV_EXTRA=
PECL_EXTRA="ast memcache"
GD_OPTIONS="--with-png-dir=/usr --with-jpeg-dir=/usr --with-webp-dir=/usr --with-freetype-dir=/usr"

case $PHP_VERSION in
    5.6.*)
        APCU_DISABLE=1
        APT_EXTRA=libmcrypt4
        APT_DEV_EXTRA=libmcrypt-dev
        EXT_EXTRA="mysql mcrypt xmlrpc"
        XDEBUG_VERSION=xdebug-2.5.5
        MEMCACHED_VERSION=memcached-2.2.0
        PECL_EXTRA="imagick memcache-3.0.8 mongodb-1.7.5"
    ;;
    7.0.*)
        APT_EXTRA="libmcrypt4 $DEBIAN_LIBSODIUM"
        APT_DEV_EXTRA="libmcrypt-dev libsodium-dev"
        EXT_EXTRA="mcrypt xmlrpc"
        XDEBUG_VERSION=xdebug-2.9.0
        PECL_EXTRA="ast imagick memcache-4.0.5.2 libsodium mongodb-1.5.3"
    ;;
    7.1.*)
        APT_EXTRA="libmcrypt4 $DEBIAN_LIBSODIUM"
        APT_DEV_EXTRA="libmcrypt-dev libsodium-dev"
        APK_EXTRA="libmcrypt libsodium"
        APK_DEV_EXTRA="libmcrypt-dev libsodium-dev"
        EXT_EXTRA="mcrypt xmlrpc"
        XDEBUG_VERSION=xdebug-2.9.0
        PECL_EXTRA="ast imagick memcache-4.0.5.2 libsodium mongodb"
    ;;
    7.2.*)
        PECL_EXTRA="imagick memcache-4.0.5.2 mongodb"
        EXT_EXTRA="xmlrpc"
    ;;
    7.3.*)
        APT_EXTRA=libzip4
        APT_DEV_EXTRA=libzip-dev
        PECL_EXTRA="imagick memcache-4.0.5.2 mongodb"
        EXT_EXTRA="xmlrpc"
    ;;
    7.4.*)
        APT_EXTRA=libzip4
        APT_DEV_EXTRA=libzip-dev
        GD_OPTIONS="--with-jpeg --with-webp --with-freetype"
        PECL_EXTRA="imagick memcache-4.0.5.2 mongodb"
        EXT_EXTRA="xmlrpc"
    ;;
    8.0.*)
        APT_EXTRA=libzip4
        APT_DEV_EXTRA=libzip-dev
        GD_OPTIONS="--with-jpeg --with-webp --with-freetype"
        PECL_EXTRA="memcache-8.0 xmlrpc-1.0.0RC2 mongodb"
    ;;
    *)
        echo "not supported."
        exit 1
    ;;
esac

if [ -e "/etc/apache2/apache2.conf" ]; then
    sed -i "s|/var/www/html|\$\{WEB_ROOT\}|" /etc/apache2/apache2.conf
    sed -i "s|/var/www|\$\{WEB_ROOT\}|"      /etc/apache2/apache2.conf
    sed -i "s|<VirtualHost \*:80>|<VirtualHost *:\$\{WEB_PORT\}>|" /etc/apache2/sites-enabled/000-default.conf
    sed -i "s|Listen 80|Listen \$\{WEB_PORT\}|" /etc/apache2/ports.conf
    sed -i "s|/var/www/html|\$\{WEB_ROOT\}|" /etc/apache2/sites-enabled/000-default.conf
    { \
        echo 'ServerName localhost'; \
        echo '<Directory ${WEB_ROOT}/>'; \
        echo '  Options FollowSymLinks'; \
        echo '  AllowOverride All'; \
        echo '  Require all granted'; \
        echo '</Directory>'; \
    } >> /etc/apache2/sites-enabled/000-default.conf
    sed -i "s|^ServerTokens .*|ServerTokens Prod|" /etc/apache2/conf-available/security.conf
    sed -i "s|^ServerSignature .*|ServerSignature Off|" /etc/apache2/conf-available/security.conf
fi

if [ $PACKAGE_FORMAT == "apt" ]; then
    echo "force-unsafe-io" > /etc/dpkg/dpkg.cfg.d/02apt-speedup
    echo "Acquire::http {No-Cache=True;};" > /etc/apt/apt.conf.d/no-cache
    apt-get update && apt-get install -y gnupg2
    apt-get install -y \
        dumb-init \
        nano \
        locales \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libcurl4-openssl-dev \
        libpng16-16 \
        libpng-dev \
        libwebp6 \
        libwebp-dev \
        libxslt1.1 \
        libxslt1-dev \
        libxml2-dev \
        $DEBIAN_LIBICU \
        icu-devtools \
        libicu-dev \
        $DEBIAN_LIBTIDY \
        libtidy-dev \
        zlib1g-dev \
        libxml2-dev \
        libmemcached11 \
        libmemcached-dev \
        curl \
        graphicsmagick \
        msmtp \
        git \
        mercurial \
        postgresql-client-common \
        libpq-dev \
        libsqlite3-dev \
        libssl-dev \
        libmagickwand-dev \
        unzip \
        $(if [ -e "/etc/apache2/apache2.conf" ]; then echo libcap2-bin; fi) \
        $APT_EXTRA \
        $APT_DEV_EXTRA
fi

if [ $PACKAGE_FORMAT == "apk" ]; then
    apk add --no-cache \
        dumb-init \
        fcgi \
        coreutils \
        freetype \
        libjpeg-turbo \
        libpng \
        libwebp \
        curl \
        libxslt \
        libxml2 \
        libmemcached-libs \
        icu-libs \
        tidyhtml-libs \
        zlib \
        libzip \
        msmtp \
        git  \
        postgresql-libs \
        openssl \
        sqlite-libs \
        curl \
        unzip \
        imagemagick \
        $APK_EXTRA \
        $APK_EXTRA_DIST

    apk add --no-cache --virtual .build-deps \
        freetype-dev \
        libjpeg-turbo-dev \
        libpng-dev \
        libwebp-dev \
        curl-dev \
        libxslt-dev \
        libxml2-dev \
        libmemcached-dev \
        icu-dev \
        tidyhtml-dev \
        zlib-dev \
        libzip-dev \
        postgresql-dev \
        openssl-dev \
        sqlite-dev \
        imagemagick-dev \
        $(if [ -e "/etc/apache2/apache2.conf" ]; then echo libcap; fi) \
        $APK_DEV_EXTRA \
        $APK_DEV_EXTRA_DIST
fi

export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"

a2enmod rewrite headers expires

if [ -e "/etc/locale.gen" ]; then
    echo "de_DE.UTF-8 UTF-8" >> /etc/locale.gen
    echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
    echo "en_GB.UTF-8 UTF-8" >> /etc/locale.gen
    echo "fr_FR.UTF-8 UTF-8" >> /etc/locale.gen
    echo "it_IT.UTF-8 UTF-8" >> /etc/locale.gen
    echo "nl_NL.UTF-8 UTF-8" >> /etc/locale.gen
    locale-gen
    /usr/sbin/update-locale LANG=en_US.UTF-8
fi

docker-php-ext-configure gd $GD_OPTIONS
pecl channel-update pecl.php.net
for P in $MEMCACHED_VERSION $PECL_EXTRA; do
    echo pecl install $P
    pecl install $P
    if [ "$P" = "libsodium" ]; then
        echo "extension=sodium.so" >> /usr/local/etc/php/conf.d/pecl_exts.ini
    else
        echo "extension=${P%-*}.so" >> /usr/local/etc/php/conf.d/pecl_exts.ini
    fi
done
if [ -z "$APCU_DISABLE" ]; then
    yes '' | pecl install apcu
    echo "extension=apcu.so" > /usr/local/etc/php/conf.d/apcu.ini
fi
if [ -n "$XDEBUG_VERSION" ]; then
    pecl install $XDEBUG_VERSION
fi
docker-php-ext-install -j$(nproc) \
    opcache \
    tidy \
    iconv \
    curl \
    zip \
    intl \
    xsl \
    gd \
    pdo_mysql \
    pdo_pgsql \
    pdo_sqlite \
    mysqli \
    soap \
    sockets \
    bcmath \
    exif \
    $EXT_EXTRA

if [ -e "/etc/apache2/apache2.conf" ]; then
    if [ -e "/usr/sbin/setcap" ]; then
        SETCAP=/usr/sbin/setcap
    fi
    if [ -e "/sbin/setcap" ]; then
        SETCAP=/sbin/setcap
    fi
    if [ -e "/usr/sbin/apache2" ]; then
        $SETCAP cap_net_bind_service+ep /usr/sbin/apache2
    fi
fi

if [ $PACKAGE_FORMAT == "apt" ]; then
    apt-get remove -y \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libcurl4-openssl-dev \
        libpng-dev \
        libwebp-dev \
        libxslt1-dev \
        libxml2-dev \
        libicu-dev \
        libtidy-dev \
        zlib1g-dev \
        libxml2-dev \
        libmemcached-dev \
        libssl-dev \
        libmagickwand-dev \
        $(if [ -e "/etc/apache2/apache2.conf" ]; then echo libcap2-bin; fi) \
        $APT_DEV_EXTRA

    rm -r /var/lib/apt/lists/*
fi

if [ $PACKAGE_FORMAT == "apk" ]; then
    apk del --no-network .build-deps
fi

EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi

php composer-setup.php --quiet --1 --install-dir=/bin --filename=composer1
php composer-setup.php --quiet --2 --install-dir=/bin --filename=composer2
rm composer-setup.php

ln -snf /bin/composer2 /bin/composer

if [ -e "/usr/share/doc" ]; then
    rm -r /usr/share/doc
fi

mkdir /state && chmod o+w /state /usr/local/etc/php/conf.d

if [ -e "/var/run/apache2" ]; then
    chmod o+w /var/run/apache2/
fi

curl https://raw.githubusercontent.com/mcnilz/minicron/master/minicron > /usr/local/bin/minicron && chmod +x /usr/local/bin/minicron

if [ -e "/etc/bash.bashrc" ]; then
    sed -i -E "s/^( *)PS1='/\1PS1='🐳  /" /etc/bash.bashrc
else
    echo 'export PS1='"'"'🐳  \u@\h:\w \$ '"'" > /etc/profile.d/docker_prompt.sh
fi

rm -rf /tmp/*
